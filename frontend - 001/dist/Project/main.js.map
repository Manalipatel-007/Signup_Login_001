{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/services/auth.service.ts","./src/app/signup-login/signup-login.component.ts","./src/app/signup-login/signup-login.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["\n\n// import { NgModule } from '@angular/core';\n// import { RouterModule, Routes } from '@angular/router';\n// import { DashboardComponent } from './dashboard/dashboard.component'; // Import your components\n// import { SignupLoginComponent } from './signup-login/signup-login.component'; \n\n// const routes: Routes = [\n//   { path: 'dashboard', component: DashboardComponent },\n//   { path: '', component: SignupLoginComponent }, // Default route\n//   // Add other routes here if necessary\n// ];\n\n// @NgModule({\n//   imports: [RouterModule.forRoot(routes)],\n//   exports: [RouterModule]\n// })\n// export class AppRoutingModule { }\n\n// src/app/app-routing.module.ts\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SignupLoginComponent } from './signup-login/signup-login.component';\n\nconst routes: Routes = [\n  { path: '', component: SignupLoginComponent },\n  { path: 'dashboard', component: DashboardComponent }, // Add this if you have a dashboard component\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'my-app';\n}\n","<!-- <app-signup-login></app-signup-login> -->\n<router-outlet></router-outlet>\n","// // app.module.ts\n// import { HttpClientModule } from '@angular/common/http';\n\n// import { NgModule } from '@angular/core';\n// import { BrowserModule } from '@angular/platform-browser';\n// import { FormsModule } from '@angular/forms';\n// import { AppRoutingModule } from './app-routing.module'; \n\n// import { AppComponent } from './app.component';\n// import { SignupLoginComponent } from './signup-login/signup-login.component';\n// import { DashboardComponent } from './dashboard/dashboard.component'; \n\n// @NgModule({\n//   declarations: [\n//     AppComponent,\n//     SignupLoginComponent,\n//     DashboardComponent \n//   ],\n//   imports: [\n//     BrowserModule,\n//     FormsModule,\n//     AppRoutingModule ,             // Use AppRoutingModul\n//     HttpClientModule        // Add HttpClienModule \n//   ],\n//   providers: [],\n//   bootstrap: [AppComponent]\n// })\n// export class AppModule { }\n\n// src/app/app.module.ts\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { SignupLoginComponent } from './signup-login/signup-login.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { DashboardComponent } from './dashboard/dashboard.component'; \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupLoginComponent,  // Include your component here\n    DashboardComponent \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,  // Add HttpClientModule here\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<link href=\"https://fonts.googleapis.com/css?family=DM+Sans:400,500,700&display=swap\" rel=\"stylesheet\">\n<div class=\"task-manager\">\n  <div class=\"left-bar\">\n    <div class=\"upper-part\">\n      <div class=\"actions\">\n        <div class=\"circle\"></div>\n        <div class=\"circle-2\"></div>\n      </div>\n    </div>\n    <div class=\"left-content\">\n      <ul class=\"action-list\">\n        <li class=\"item\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\"\n            stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" class=\"feather feather-inbox\"\n            viewBox=\"0 0 24 24\">\n            <path d=\"M22 12h-6l-2 3h-4l-2-3H2\" />\n            <path\n              d=\"M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z\" />\n          </svg>\n          <span>Inbox</span>\n        </li>\n        <li class=\"item\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n            stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n            class=\"feather feather-star\">\n            <polygon\n              points=\"12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2\" />\n            </svg>\n          <span> Today</span>\n        </li>\n        <li class=\"item\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\"\n            stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" class=\"feather feather-calendar\"\n            viewBox=\"0 0 24 24\">\n            <rect width=\"18\" height=\"18\" x=\"3\" y=\"4\" rx=\"2\" ry=\"2\" />\n            <path d=\"M16 2v4M8 2v4m-5 4h18\" />\n          </svg>\n          <span>Upcoming</span>\n        </li>\n        <li class=\"item\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n            stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n            class=\"feather feather-hash\">\n            <line x1=\"4\" y1=\"9\" x2=\"20\" y2=\"9\" />\n            <line x1=\"4\" y1=\"15\" x2=\"20\" y2=\"15\" />\n            <line x1=\"10\" y1=\"3\" x2=\"8\" y2=\"21\" />\n            <line x1=\"16\" y1=\"3\" x2=\"14\" y2=\"21\" /></svg>\n          <span>Important</span>\n        </li>\n        <li class=\"item\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n            stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n            class=\"feather feather-users\">\n            <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"9\" cy=\"7\" r=\"4\" />\n            <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\" />\n            <path d=\"M16 3.13a4 4 0 0 1 0 7.75\" /></svg>\n          <span>Meetings</span>\n        </li>\n        <li class=\"item\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\"\n            stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" class=\"feather feather-trash\"\n            viewBox=\"0 0 24 24\">\n            <path d=\"M3 6h18m-2 0v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\" />\n          </svg>\n          <span>Trash</span>\n        </li>\n      </ul>\n      <ul class=\"category-list\">\n        <li class=\"item\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n            stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n            class=\"feather feather-users\">\n            <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n            <circle cx=\"9\" cy=\"7\" r=\"4\" />\n            <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\" />\n            <path d=\"M16 3.13a4 4 0 0 1 0 7.75\" /></svg>\n          <span>Family</span>\n        </li>\n        <li class=\"item\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" stroke=\"currentColor\"\n            stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" class=\"feather feather-sun\"\n            viewBox=\"0 0 24 24\">\n            <circle cx=\"12\" cy=\"12\" r=\"5\" />\n            <path\n              d=\"M12 1v2m0 18v2M4.22 4.22l1.42 1.42m12.72 12.72l1.42 1.42M1 12h2m18 0h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42\" />\n          </svg>\n          <span>Vacation</span>\n        </li>\n        <li class=\"item\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n            stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n            class=\"feather feather-trending-up\">\n            <polyline points=\"23 6 13.5 15.5 8.5 10.5 1 18\" />\n            <polyline points=\"17 6 23 6 23 12\" /></svg>\n          <span>Festival</span>\n        </li>\n        <li class=\"item\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n            stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n            class=\"feather feather-zap\">\n            <polygon points=\"13 2 3 14 12 14 11 22 21 10 12 10 13 2\" /></svg>\n          <span>Concerts</span>\n        </li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"page-content\">\n    <div class=\"header\">Today Tasks</div>\n    <div class=\"content-categories\">\n      <div class=\"label-wrapper\">\n        <input class=\"nav-item\" name=\"nav\" type=\"radio\" id=\"opt-1\">\n        <label class=\"category\" for=\"opt-1\">All</label>\n      </div>\n      <div class=\"label-wrapper\">\n        <input class=\"nav-item\" name=\"nav\" type=\"radio\" id=\"opt-2\" checked>\n        <label class=\"category\" for=\"opt-2\">Important</label>\n      </div>\n      <div class=\"label-wrapper\">\n        <input class=\"nav-item\" name=\"nav\" type=\"radio\" id=\"opt-3\">\n        <label class=\"category\" for=\"opt-3\">Notes</label>\n      </div>\n      <div class=\"label-wrapper\">\n        <input class=\"nav-item\" name=\"nav\" type=\"radio\" id=\"opt-4\">\n        <label class=\"category\" for=\"opt-4\">Links</label>\n      </div>\n    </div>\n    <div class=\"tasks-wrapper\">\n      <div class=\"task\">\n        <input class=\"task-item\" name=\"task\" type=\"checkbox\" id=\"item-1\" checked>\n        <label for=\"item-1\">\n          <span class=\"label-text\">Dashboard Design Implementation</span>\n        </label>\n        <span class=\"tag approved\">Approved</span>\n      </div>\n      <div class=\"task\">\n        <input class=\"task-item\" name=\"task\" type=\"checkbox\" id=\"item-2\" checked>\n        <label for=\"item-2\">\n          <span class=\"label-text\">Create a userflow</span>\n        </label>\n        <span class=\"tag progress\">In Progress</span>\n      </div>\n      <div class=\"task\">\n        <input class=\"task-item\" name=\"task\" type=\"checkbox\" id=\"item-3\">\n        <label for=\"item-3\">\n          <span class=\"label-text\">Application Implementation</span>\n        </label>\n        <span class=\"tag review\">In Review</span>\n      </div>\n      <div class=\"task\">\n        <input class=\"task-item\" name=\"task\" type=\"checkbox\" id=\"item-4\">\n        <label for=\"item-4\">\n          <span class=\"label-text\">Create a Dashboard Design</span>\n        </label>\n        <span class=\"tag progress\">In Progress</span>\n      </div>\n      <div class=\"task\">\n        <input class=\"task-item\" name=\"task\" type=\"checkbox\" id=\"item-5\">\n        <label for=\"item-5\">\n          <span class=\"label-text\">Create a Web Application Design</span>\n        </label>\n        <span class=\"tag approved\">Approved</span>\n      </div>\n      <div class=\"task\">\n        <input class=\"task-item\" name=\"task\" type=\"checkbox\" id=\"item-6\">\n        <label for=\"item-6\">\n          <span class=\"label-text\">Interactive Design</span>\n        </label>\n        <span class=\"tag review\">In Review</span>\n      </div>\n      <div class=\"header upcoming\">Upcoming Tasks</div>\n      <div class=\"task\">\n        <input class=\"task-item\" name=\"task\" type=\"checkbox\" id=\"item-7\">\n        <label for=\"item-7\">\n          <span class=\"label-text\">Dashboard Design Implementation</span>\n        </label>\n        <span class=\"tag waiting\">Waiting</span>\n      </div>\n      <div class=\"task\">\n        <input class=\"task-item\" name=\"task\" type=\"checkbox\" id=\"item-8\">\n        <label for=\"item-8\">\n          <span class=\"label-text\">Create a userflow</span>\n        </label>\n        <span class=\"tag waiting\">Waiting</span>\n      </div>\n      <div class=\"task\">\n        <input class=\"task-item\" name=\"task\" type=\"checkbox\" id=\"item-9\">\n        <label for=\"item-9\">\n          <span class=\"label-text\">Application Implementation</span>\n        </label>\n        <span class=\"tag waiting\">Waiting</span>\n      </div>\n      <div class=\"task\">\n        <input class=\"task-item\" name=\"task\" type=\"checkbox\" id=\"item-10\">\n        <label for=\"item-10\">\n          <span class=\"label-text\">Create a Dashboard Design</span>\n        </label>\n        <span class=\"tag waiting\">Waiting</span>\n      </div>\n    </div>\n  </div>\n  <div class=\"right-bar\">\n    <div class=\"top-part\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\"\n        stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\n        class=\"feather feather-users\">\n        <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\" />\n        <circle cx=\"9\" cy=\"7\" r=\"4\" />\n        <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\" />\n        <path d=\"M16 3.13a4 4 0 0 1 0 7.75\" /></svg>\n      <div class=\"count\">6</div>\n    </div>\n    <div class=\"header\">Schedule</div>\n    <div class=\"right-content\">\n      <div class=\"task-box yellow\">\n        <div class=\"description-task\">\n          <div class=\"time\">08:00 - 09:00 AM</div>\n          <div class=\"task-name\">Product Review</div>\n        </div>\n        <div class=\"more-button\"></div>\n        <div class=\"members\">\n          <img\n            src=\"https://images.unsplash.com/photo-1491349174775-aaafddd81942?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=934&q=80\"\n            alt=\"member\">\n          <img\n            src=\"https://images.unsplash.com/photo-1476657680631-c07285ff2581?ixlib=rb-1.2.1&auto=format&fit=crop&w=2210&q=80\"\n            alt=\"member-2\">\n          <img\n            src=\"https://images.unsplash.com/photo-1496345875659-11f7dd282d1d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2250&q=80\"\n            alt=\"member-3\">\n          <img\n            src=\"https://images.unsplash.com/photo-1455504490126-80ed4d83b3b9?ixlib=rb-1.2.1&auto=format&fit=crop&w=2250&q=80\"\n            alt=\"member-4\">\n        </div>\n      </div>\n      <div class=\"task-box blue\">\n        <div class=\"description-task\">\n          <div class=\"time\">10:00 - 11:00 AM</div>\n          <div class=\"task-name\">Design Meeting</div>\n        </div>\n        <div class=\"more-button\"></div>\n        <div class=\"members\">\n          <img\n            src=\"https://images.unsplash.com/photo-1484688493527-670f98f9b195?ixlib=rb-1.2.1&auto=format&fit=crop&w=2230&q=80\"\n            alt=\"member\">\n          <img\n            src=\"https://images.unsplash.com/photo-1469334031218-e382a71b716b?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2250&q=80\"\n            alt=\"member-2\">\n          <img\n            src=\"https://images.unsplash.com/photo-1455504490126-80ed4d83b3b9?ixlib=rb-1.2.1&auto=format&fit=crop&w=2250&q=80\"\n            alt=\"member-3\">\n        </div>\n      </div>\n      <div class=\"task-box red\">\n        <div class=\"description-task\">\n          <div class=\"time\">01:00 - 02:00 PM</div>\n          <div class=\"task-name\">Team Meeting</div>\n        </div>\n        <div class=\"more-button\"></div>\n        <div class=\"members\">\n          <img\n            src=\"https://images.unsplash.com/photo-1491349174775-aaafddd81942?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=934&q=80\"\n            alt=\"member\">\n          <img\n            src=\"https://images.unsplash.com/photo-1475552113915-6fcb52652ba2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1934&q=80\"\n            alt=\"member-2\">\n          <img\n            src=\"https://images.unsplash.com/photo-1493752603190-08d8b5d1781d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1600&q=80\"\n            alt=\"member-3\">\n          <img\n            src=\"https://images.unsplash.com/photo-1484688493527-670f98f9b195?ixlib=rb-1.2.1&auto=format&fit=crop&w=2230&q=80\"\n            alt=\"member-4\">\n        </div>\n      </div>\n      <div class=\"task-box green\">\n        <div class=\"description-task\">\n          <div class=\"time\">03:00 - 04:00 PM</div>\n          <div class=\"task-name\">Release Event</div>\n        </div>\n        <div class=\"more-button\"></div>\n        <div class=\"members\">\n          <img\n            src=\"https://images.unsplash.com/photo-1523419409543-a5e549c1faa8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=943&q=80\"\n            alt=\"member\">\n          <img\n            src=\"https://images.unsplash.com/photo-1519742866993-66d3cfef4bbd?ixlib=rb-1.2.1&auto=format&fit=crop&w=881&q=80\"\n            alt=\"member-2\">\n          <img\n            src=\"https://images.unsplash.com/photo-1521122872341-065792fb2fa0?ixlib=rb-1.2.1&auto=format&fit=crop&w=2208&q=80\"\n            alt=\"member-3\">\n          <img\n            src=\"https://images.unsplash.com/photo-1486302913014-862923f5fd48?ixlib=rb-1.2.1&auto=format&fit=crop&w=3400&q=80\"\n            alt=\"member-4\">\n          <img\n            src=\"https://images.unsplash.com/photo-1484187216010-59798e9cc726?ixlib=rb-1.2.1&auto=format&fit=crop&w=955&q=80\"\n            alt=\"member-5\">\n        </div>\n      </div>\n      <div class=\"task-box blue\">\n        <div class=\"description-task\">\n          <div class=\"time\">08:00 - 09:00 PM</div>\n          <div class=\"task-name\">Release Event</div>\n        </div>\n        <div class=\"more-button\"></div>\n        <div class=\"members\">\n          <img\n            src=\"https://images.unsplash.com/photo-1523419409543-a5e549c1faa8?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=943&q=80\"\n            alt=\"member\">\n          <img\n            src=\"https://images.unsplash.com/photo-1519742866993-66d3cfef4bbd?ixlib=rb-1.2.1&auto=format&fit=crop&w=881&q=80\"\n            alt=\"member-2\">\n          <img\n            src=\"https://images.unsplash.com/photo-1521122872341-065792fb2fa0?ixlib=rb-1.2.1&auto=format&fit=crop&w=2208&q=80\"\n            alt=\"member-3\">\n          <img\n            src=\"https://images.unsplash.com/photo-1486302913014-862923f5fd48?ixlib=rb-1.2.1&auto=format&fit=crop&w=3400&q=80\"\n            alt=\"member-4\">\n          <img\n            src=\"https://images.unsplash.com/photo-1484187216010-59798e9cc726?ixlib=rb-1.2.1&auto=format&fit=crop&w=955&q=80\"\n            alt=\"member-5\">\n        </div>\n      </div>\n      <div class=\"task-box yellow\">\n        <div class=\"description-task\">\n          <div class=\"time\">11:00 - 12:00 PM</div>\n          <div class=\"task-name\">Practise</div>\n        </div>\n        <div class=\"more-button\"></div>\n        <div class=\"members\">\n          <img\n            src=\"https://images.unsplash.com/photo-1491349174775-aaafddd81942?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=934&q=80\"\n            alt=\"member\">\n          <img\n            src=\"https://images.unsplash.com/photo-1476657680631-c07285ff2581?ixlib=rb-1.2.1&auto=format&fit=crop&w=2210&q=80\"\n            alt=\"member-2\">\n          <img\n            src=\"https://images.unsplash.com/photo-1496345875659-11f7dd282d1d?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2250&q=80\"\n            alt=\"member-3\">\n          <img\n            src=\"https://images.unsplash.com/photo-1455504490126-80ed4d83b3b9?ixlib=rb-1.2.1&auto=format&fit=crop&w=2250&q=80\"\n            alt=\"member-4\">\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","\n// import { Injectable } from '@angular/core';\n// import { HttpClient } from '@angular/common/http';\n// import { Observable } from 'rxjs';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class AuthService {\n\n//   private loginUrl = 'https://api.example.com/login'; \n\n//   constructor(private http: HttpClient) { }\n\n//   // Method to log in the user\n//   login(email: string, password: string): Observable<any> {\n//     return this.http.post(this.loginUrl, { email, password });\n//   }\n\n// }\n\n// src/app/services/auth.service.ts\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = 'http://your-backend-api-url'; // Replace with your backend API URL\n\n  constructor(private http: HttpClient) {}\n\n  // Method to sign up user\n  signUp(userData: any): Observable<any> {\n    return this.http.post<any>(`${this.apiUrl}/signup`, userData);\n  }\n\n  // Method to send OTP\n  sendOtp(email: string): Observable<any> {\n    return this.http.post<any>(`${this.apiUrl}/send-otp`, { email });\n  }\n\n  // Method to verify OTP\n  verifyOtp(otp: string): Observable<any> {\n    return this.http.post<any>(`${this.apiUrl}/verify-otp`, { otp });\n  }\n}\n","\n// import { Component } from '@angular/core';\n// import { Router } from '@angular/router'; \n// import { HttpClient } from '@angular/common/http';\n\n// @Component({\n//   selector: 'app-signup-login',\n//   templateUrl: './signup-login.component.html',\n//   styleUrls: ['./signup-login.component.css']\n// })\n// export class SignupLoginComponent {\n//   email: string = '';\n//   otp: string = '';\n//   otpSent: boolean = false;\n//   isVerified: boolean = false;\n//   errorMessage: string = '';\n//   successMessage: string = '';\n\n//   // for signup\n//   username: string = '';\n//   number: string = '';\n//   password: string = '';\n//   confirmPassword: string = '';\n\n//   constructor(private router: Router, private http: HttpClient) {}\n\n//       // Function to send OTP\n//   sendOtp() {\n//     if (this.email) {\n//       this.http.post('http://localhost:3000/sendOtp', { email: this.email }, { responseType: 'text' })\n//         .subscribe(\n//           (response: string) => {\n//             this.otpSent = true;\n//             this.successMessage = response;     // Display success message from server\n//             this.errorMessage = '';\n//           },\n//           (error) => {\n//             this.errorMessage = 'Error sending OTP. Please try again.';\n//             this.successMessage = ''; \n//           }\n//         );\n//     } else {\n//       this.errorMessage = 'Please enter a valid email address.';\n//     }\n//   }\n  \n\n  // Function to verify OTP\n//   verifyOtp() {\n//     if (this.otp) {\n//       this.http.post('http://localhost:3000/verifyOtp', { otp: this.otp }, { responseType: 'text' })\n//         .subscribe(\n//           (response: string) => {\n//             if (response === 'OTP verified successfully') {\n//               this.isVerified = true;\n//               this.successMessage = response; // Display success message\n//               this.errorMessage = '';\n//               this.router.navigate(['/dashboard']); // Redirect to dashboard\n//             } else {\n//               this.errorMessage = response; // Handle custom error messages from server\n//               this.isVerified = false;\n//               this.successMessage = ''; \n//             }\n//           },\n//           (error) => {\n//             this.errorMessage = 'Invalid OTP. Please try again.';\n//             this.successMessage = ''; \n//           }\n//         );\n//     } else {\n//       this.errorMessage = 'Please enter the OTP.';\n//     }\n//   }\n  \n//   // Method for signup\n//   signUp(signUpForm: any) {\n//     if (this.password === this.confirmPassword) {\n//       console.log('Signing up:', this.username, this.email, this.number);\n//     } else {\n//       this.errorMessage = 'Passwords do not match.';\n//     }\n//   }\n  \n// }\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n// import { Component } from '@angular/core';\n// import { Router } from '@angular/router';\n\n// @Component({\n//   selector: 'app-signup-login',\n//   templateUrl: './signup-login.component.html',\n//   styleUrls: ['./signup-login.component.css']\n// })\n// export class SignupLoginComponent {\n//   email: string = '';\n//   otp: string = '';\n//   otpSent: boolean = false;\n//   isVerified: boolean = false;\n//   errorMessage: string = '';\n//   successMessage: string = '';\n//   username: string = '';\n//   number: string = '';\n//   password: string = '';\n\n//   constructor(private router: Router) {} \n\n//   // Method for signup\n//   signUp() {\n//     if (this.username && this.email && this.number && this.password) {\n//       const userData = {\n//         username: this.username,\n//         email: this.email,\n//         number: this.number,\n//         password: this.password,\n//       };\n  \n//       // Store user data in local storage\n//       localStorage.setItem('userData', JSON.stringify(userData));\n//       this.successMessage = 'Sign up successful!'; // Show the success message immediately after sign-up\n//       this.errorMessage = ''; // Clear any existing error message\n//     } else {\n//       this.errorMessage = 'Please fill in all the fields.';\n//       this.successMessage = ''; // Clear the success message\n//     }\n//   }\n  \n  \n\n//   // Method to send OTP\n//   sendOtp() {\n//     if (this.email) {\n//       const storedUserData = localStorage.getItem('userData');\n//       if (storedUserData) {\n//         console.log('Sending OTP to:', this.email);\n//         this.otpSent = true;\n//         this.errorMessage = '';\n//         this.successMessage = ''; \n//       } else {\n//         this.errorMessage = 'You need to sign up first.';\n//       }\n//     } else {\n//       this.errorMessage = 'Please enter a valid email address.';\n//     }\n//   }\n\n//   // Method to verify OTP\n//   verifyOtp() {\n//     if (this.otp === '123456') { \n//       this.isVerified = true;\n//       this.successMessage = 'Login successful!';\n//       this.errorMessage = '';\n//       this.router.navigate(['/dashboard']);\n//     } else {\n//       this.errorMessage = 'Invalid OTP. Please try again.';\n//       this.isVerified = false;\n//       this.successMessage = ''; \n//     }\n//   }\n// }\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// src/app/signup-login/signup-login.component.ts\n// src/app/signup-login/signup-login.component.ts\n\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-signup-login',\n  templateUrl: './signup-login.component.html',\n  styleUrls: ['./signup-login.component.css']\n})\nexport class SignupLoginComponent {\n  email: string = '';\n  otp: string = '';\n  otpSent: boolean = false;\n  isVerified: boolean = false;\n  errorMessage: string = '';\n  successMessage: string = '';\n  username: string = '';\n  number: string = '';\n  password: string = '';\n  loginEmail: string = '';  // Add this line\n  loginErrorMessage: string = '';  // Add this line\n  loginSuccessMessage: string = '';  // Add this line\n\n  constructor(private router: Router, private authService: AuthService) {}\n\n  // Method for signup\n  signUp() {\n    if (this.username && this.email && this.number && this.password) {\n      const userData = {\n        username: this.username,\n        email: this.email,\n        number: this.number,\n        password: this.password,\n      };\n\n      // Store user data in local storage\n      localStorage.setItem('userData', JSON.stringify(userData));\n      this.successMessage = 'Sign up successful!';\n      this.errorMessage = '';\n    } else {\n      this.errorMessage = 'Please fill in all the fields.';\n      this.successMessage = '';\n    }\n  }\n\n  // Method to send OTP\n  sendOtp() {\n    if (this.loginEmail) {  // Use loginEmail instead of email\n      this.authService.sendOtp(this.loginEmail).subscribe(\n        (response: any) => {\n          this.otpSent = true;\n          this.loginErrorMessage = '';\n          this.loginSuccessMessage = 'OTP sent successfully!';\n        },\n        (error: any) => {\n          this.loginErrorMessage = 'Error sending OTP. Please try again.';\n        }\n      );\n    } else {\n      this.loginErrorMessage = 'Please enter a valid email address.';\n    }\n  }\n\n  // Method to verify OTP\n  verifyOtp() {\n    if (this.otp) {\n      this.authService.verifyOtp(this.otp).subscribe(\n        (response: any) => {\n          this.isVerified = true;\n          this.loginSuccessMessage = 'Login successful!';\n          this.loginErrorMessage = '';\n          this.router.navigate(['/dashboard']);\n        },\n        (error: any) => {\n          this.loginErrorMessage = 'Invalid OTP. Please try again.';\n        }\n      );\n    } else {\n      this.loginErrorMessage = 'Please enter the OTP.';\n    }\n  }\n}\n","<!-- \n   <!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Slide Navbar</title>\n    <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500&display=swap\" rel=\"stylesheet\">\n    <style>\n        /* Add your custom CSS styles here */\n    </style>\n</head>\n<body>\n    <div class=\"main\">    \n        <input type=\"checkbox\" id=\"chk\" aria-hidden=\"true\">\n\n        <div class=\"signup\">\n            <form #signUpForm=\"ngForm\" (ngSubmit)=\"signUp(signUpForm)\">\n                <label for=\"chk\" aria-hidden=\"true\">Sign up</label>\n                <input type=\"text\" name=\"username\" placeholder=\"User name\" [(ngModel)]=\"username\" required>\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" [(ngModel)]=\"email\" required>\n                <input type=\"number\" name=\"number\" placeholder=\"Number\" [(ngModel)]=\"number\" required>\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"password\" required autocomplete=\"new-password\">\n                <button type=\"submit\">Sign up</button>\n            </form>\n        </div>\n\n        <div class=\"login\">\n            <form #loginForm=\"ngForm\">\n                <label for=\"chk\" aria-hidden=\"true\">Login</label>\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" [(ngModel)]=\"email\" required>\n                \n                <button type=\"button\" (click)=\"sendOtp()\">Send OTP</button>\n\n                <div *ngIf=\"otpSent\">\n                    <input type=\"text\" name=\"otp\" placeholder=\"Enter OTP\" [(ngModel)]=\"otp\" required>\n                    <button type=\"button\" (click)=\"verifyOtp()\">Verify OTP</button>\n                </div>\n\n                <!-- Display error message \n                <div *ngIf=\"errorMessage\" class=\"error-message\">\n                    {{ errorMessage }}\n                </div>\n\n                <!-- Display success message \n                <div *ngIf=\"successMessage\" class=\"success-message\">\n                    {{ successMessage }}\n                </div>\n            </form>\n        </div>\n    </div>\n</body>\n</html>  -->\n\n<!--//////////////////////////////////////////////////////////////////////////////////////////////////////////////-->\n<!-- \n<!DOCTYPE html>\n<html>\n<head>\n    <title>Slide Navbar</title>\n    <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500&display=swap\" rel=\"stylesheet\">\n</head>\n<body>\n    <div class=\"main\">    \n        <input type=\"checkbox\" id=\"chk\" aria-hidden=\"true\">\n\n        <div class=\"signup\">\n            <form (ngSubmit)=\"signUp()\">\n                <label for=\"chk\" aria-hidden=\"true\">Sign up</label>\n                <input type=\"text\" name=\"username\" placeholder=\"User name\" [(ngModel)]=\"username\" required>\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" [(ngModel)]=\"email\" required>\n                <input type=\"number\" name=\"number\" placeholder=\"Number\" [(ngModel)]=\"number\" required>\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"password\" required>\n                <button class=\"btn\" type=\"submit\">Sign up</button>\n            </form>\n\n            <!-- Display success message \n            <div *ngIf=\"successMessage\" class=\"success-message\">\n                {{ successMessage }}\n            </div>\n\n            <!-- Display error message\n            <div *ngIf=\"errorMessage\" class=\"error-message\">\n                {{ errorMessage }}\n            </div>\n        </div>\n\n        <div class=\"login\">\n            <form>\n                <label for=\"chk\" aria-hidden=\"true\">Login</label>\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" [(ngModel)]=\"email\" required>\n                \n                <button type=\"button\" (click)=\"sendOtp()\">Send OTP</button>\n\n                <div *ngIf=\"otpSent\">\n                    <input type=\"text\" name=\"otp\" placeholder=\"Enter OTP\" [(ngModel)]=\"otp\" required>\n                    <button type=\"button\" (click)=\"verifyOtp()\">Verify OTP</button>\n                </div>\n\n                <!-- Display error message \n                <div *ngIf=\"errorMessage\" class=\"error-message\">\n                    {{ errorMessage }}\n                </div>\n\n                <!-- Display success message \n                <div *ngIf=\"successMessage\" class=\"success-message\">\n                    {{ successMessage }}\n                </div>\n            </form>\n        </div>\n    </div>\n</body>\n</html>  -->\n\n\n<!-- this is next -->\n<!-- src/app/signup-login/signup-login.component.html -->\n<!-- src/app/signup-login/signup-login.component.html -->\n\n<!DOCTYPE html>\n<html>\n\n<head>\n    <title>Slide Navbar</title>\n    <link href=\"https://fonts.googleapis.com/css2?family=Jost:wght@500&display=swap\" rel=\"stylesheet\">\n</head>\n\n<body>\n    <div class=\"main\">\n        <input type=\"checkbox\" id=\"chk\" aria-hidden=\"true\">\n\n        <div class=\"signup\">\n            <form (ngSubmit)=\"signUp()\">\n                <label for=\"chk\" aria-hidden=\"true\">Sign up</label>\n                <input type=\"text\" name=\"username\" placeholder=\"User name\" [(ngModel)]=\"username\" required>\n                <input type=\"email\" name=\"email\" placeholder=\"Email\" [(ngModel)]=\"email\" required>\n                <input type=\"number\" name=\"number\" placeholder=\"Number\" [(ngModel)]=\"number\" required>\n                <input type=\"password\" name=\"password\" placeholder=\"Password\" [(ngModel)]=\"password\" required>\n                <button class=\"btn\" type=\"submit\">Sign up</button>\n            </form>\n\n            <!-- Display success message -->\n            <div *ngIf=\"successMessage\" class=\"success-message\">\n                {{ successMessage }}\n            </div>\n\n            <!-- Display error message -->\n            <div *ngIf=\"errorMessage\" class=\"error-message\">\n                {{ errorMessage }}\n            </div>\n        </div>\n\n        <div class=\"login\">\n            <form>\n                <label for=\"chk\" aria-hidden=\"true\">Login</label>\n                <input type=\"email\" name=\"loginEmail\" placeholder=\"Email\" [(ngModel)]=\"loginEmail\" required>\n\n                <button type=\"button\" (click)=\"sendOtp()\">Send OTP</button>\n\n                <div *ngIf=\"otpSent\">\n                    <input type=\"text\" name=\"otp\" placeholder=\"Enter OTP\" [(ngModel)]=\"otp\" required>\n                    <button type=\"button\" (click)=\"verifyOtp()\">Verify OTP</button>\n                </div>\n\n                <!-- Display error message -->\n                <div *ngIf=\"loginErrorMessage\" class=\"error-message\">\n                    {{ loginErrorMessage }}\n                </div>\n\n                <!-- Display success message -->\n                <div *ngIf=\"loginSuccessMessage\" class=\"success-message\">\n                    {{ loginSuccessMessage }}\n                </div>\n            </form>\n        </div>\n    </div>\n</body>\n\n</html>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}